"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8953],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(96540);const r={},d=s.createContext(r);function i(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(d.Provider,{value:t},e.children)}},46571:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/starter-flow-unstructured-qa-4260fdd42821cf2cbd056661b96be655.png"},67836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Components/components-loaders","title":"Loaders","description":"As of Langflow 1.1, loader components are now found in the Components menu under Bundles.","source":"@site/docs/Components/components-loaders.md","sourceDirName":"Components","slug":"/components-loaders","permalink":"/components-loaders","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Loaders","slug":"/components-loaders"},"sidebar":"docs","previous":{"title":"Inputs and outputs","permalink":"/components-io"},"next":{"title":"Logic","permalink":"/components-logic"}}');var r=n(74848),d=n(28453);const i={title:"Loaders",slug:"/components-loaders"},o="Loader components in Langflow",l={},c=[{value:"Use a loader component in a flow",id:"use-a-loader-component-in-a-flow",level:2},{value:"Confluence",id:"confluence",level:2},{value:"GitLoader",id:"gitloader",level:2},{value:"Unstructured",id:"unstructured",level:2}];function a(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"loader-components-in-langflow",children:"Loader components in Langflow"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["As of Langflow 1.1, loader components are now found in the ",(0,r.jsx)(t.strong,{children:"Components"})," menu under ",(0,r.jsx)(t.strong,{children:"Bundles"}),"."]})}),"\n",(0,r.jsx)(t.p,{children:"Loaders fetch data into Langflow from various sources, such as databases, websites, and local files."}),"\n",(0,r.jsx)(t.h2,{id:"use-a-loader-component-in-a-flow",children:"Use a loader component in a flow"}),"\n",(0,r.jsxs)(t.p,{children:["This flow creates a question-and-answer chatbot for documents that are loaded into the flow.\nThe ",(0,r.jsx)(t.a,{href:"https://unstructured.io/",children:"Unstructured.io"})," loader component loads files from your local machine, and then parses them into a list of structured ",(0,r.jsx)(t.a,{href:"/concepts-objects",children:"Data"})," objects.\nThis loaded data informs the ",(0,r.jsx)(t.strong,{children:"Open AI"})," component's responses to your questions."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Sample Flow retrieving data with unstructured",src:n(46571).A+"",width:"2950",height:"1238"})}),"\n",(0,r.jsx)(t.h2,{id:"confluence",children:"Confluence"}),"\n",(0,r.jsx)(t.p,{children:"The Confluence component integrates with the Confluence wiki collaboration platform to load and process documents. It utilizes the ConfluenceLoader from LangChain to fetch content from a specified Confluence space."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"url"}),(0,r.jsx)(t.td,{children:"Site URL"}),(0,r.jsxs)(t.td,{children:["The base URL of the Confluence Space, for example ",(0,r.jsx)(t.a,{href:"https://company.atlassian.net/wiki",children:"https://company.atlassian.net/wiki"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"username"}),(0,r.jsx)(t.td,{children:"Username"}),(0,r.jsxs)(t.td,{children:["The Atlassian User E-mail, for example ",(0,r.jsx)(t.a,{href:"mailto:email@example.com",children:"email@example.com"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"api_key"}),(0,r.jsx)(t.td,{children:"API Key"}),(0,r.jsxs)(t.td,{children:["The Atlassian API Key. Create an API key at ",(0,r.jsx)(t.a,{href:"https://id.atlassian.com/manage-profile/security/api-tokens",children:"Atlassian"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"space_key"}),(0,r.jsx)(t.td,{children:"Space Key"}),(0,r.jsx)(t.td,{children:"The key of the Confluence space to access."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"cloud"}),(0,r.jsx)(t.td,{children:"Use Cloud?"}),(0,r.jsx)(t.td,{children:"Whether to use Confluence Cloud. Default is true."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"content_format"}),(0,r.jsx)(t.td,{children:"Content Format"}),(0,r.jsx)(t.td,{children:"The content format. Default is STORAGE."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_pages"}),(0,r.jsx)(t.td,{children:"Max Pages"}),(0,r.jsx)(t.td,{children:"The maximum number of pages to retrieve. Default is 1000."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"A list of Data objects containing the loaded Confluence documents."})]})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"gitloader",children:"GitLoader"}),"\n",(0,r.jsx)(t.p,{children:"The GitLoader component uses the GitLoader from LangChain to fetch and load documents from a specified Git repository."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"repo_path"}),(0,r.jsx)(t.td,{children:"Repository Path"}),(0,r.jsx)(t.td,{children:"The local path to the Git repository."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"clone_url"}),(0,r.jsx)(t.td,{children:"Clone URL"}),(0,r.jsx)(t.td,{children:"The URL to clone the Git repository from. This field is optional."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"branch"}),(0,r.jsx)(t.td,{children:"Branch"}),(0,r.jsx)(t.td,{children:"The branch to load files from. Default is main."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"file_filter"}),(0,r.jsx)(t.td,{children:"File Filter"}),(0,r.jsx)(t.td,{children:"The patterns to filter files. Use .py to include only Python files, or !.py to exclude Python files."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"content_filter"}),(0,r.jsx)(t.td,{children:"Content Filter"}),(0,r.jsx)(t.td,{children:"A regex pattern to filter files based on their content."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"A list of Data objects containing the loaded Git repository documents."})]})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"unstructured",children:"Unstructured"}),"\n",(0,r.jsxs)(t.p,{children:["This component uses the ",(0,r.jsx)(t.a,{href:"https://unstructured.io/",children:"Unstructured.io"})," Serverless API to load and parse files into a list of structured ",(0,r.jsx)(t.a,{href:"/concepts-objects",children:"Data"})," objects."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Inputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"file"}),(0,r.jsx)(t.td,{children:"File"}),(0,r.jsxs)(t.td,{children:["The path to the file to be parsed. Supported types are listed in the ",(0,r.jsx)(t.a,{href:"https://docs.unstructured.io/api-reference/api-services/overview#supported-file-types",children:"Unstructured documentation"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"api_key"}),(0,r.jsx)(t.td,{children:"API Key"}),(0,r.jsx)(t.td,{children:"The Unstructured.io Serverless API Key."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"api_url"}),(0,r.jsx)(t.td,{children:"Unstructured.io API URL"}),(0,r.jsx)(t.td,{children:"The URL for the Unstructured API. This field is optional."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"chunking_strategy"}),(0,r.jsx)(t.td,{children:"Chunking Strategy"}),(0,r.jsx)(t.td,{children:"The strategy for chunking the document. Options include basic, by_title, by_page, and by_similarity."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"unstructured_args"}),(0,r.jsx)(t.td,{children:"Additional Arguments"}),(0,r.jsx)(t.td,{children:"A dictionary of additional arguments for the Unstructured.io API. This field is optional."})]})]})]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Outputs"})}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"A list of Data objects containing the parsed content from the input file."})]})})]})]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);