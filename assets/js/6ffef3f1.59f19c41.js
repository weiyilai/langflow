"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[1954],{17886:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var r=t(64058),o=t(74848);function i({name:e,...n}){const t=r[e];return t?(0,o.jsx)(t,{...n}):null}},44250:(e,n,t)=>{t.r(n),t.d(n,{CH:()=>h,assets:()=>d,chCodeConfig:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"Templates/financial-report-parser","title":"Financial report parser","description":"This flow demonstrates how to parse LLM responses into a structured format.","source":"@site/docs/Templates/financial-report-parser.mdx","sourceDirName":"Templates","slug":"/financial-report-parser","permalink":"/financial-report-parser","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Financial report parser","slug":"/financial-report-parser"},"sidebar":"docs","previous":{"title":"Vector store RAG","permalink":"/vector-store-rag"},"next":{"title":"Sequential tasks agent","permalink":"/sequential-agent"}}');var o=t(74848),i=t(28453),s=t(24754),a=t(17886);const c={title:"Financial report parser",slug:"/financial-report-parser"},l=void 0,d={},h={annotations:s.hk,Code:s.Cy},p={staticMediaQuery:"not screen, (max-width: 768px)",lineNumbers:!0,showCopyButton:!0,themeName:"github-dark"},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create the financial report parser flow",id:"create-the-financial-report-parser-flow",level:2},{value:"Run the financial report parser flow",id:"run-the-financial-report-parser-flow",level:2}];function f(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return h||x("CH",!1),h.Code||x("CH.Code",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("style",{dangerouslySetInnerHTML:{__html:'[data-ch-theme="github-dark"] {  --ch-t-colorScheme: dark;--ch-t-foreground: #c9d1d9;--ch-t-background: #0d1117;--ch-t-lighter-inlineBackground: #0d1117e6;--ch-t-editor-background: #0d1117;--ch-t-editor-foreground: #c9d1d9;--ch-t-editor-lineHighlightBackground: #6e76811a;--ch-t-editor-rangeHighlightBackground: #ffffff0b;--ch-t-editor-infoForeground: #3794FF;--ch-t-editor-selectionBackground: #264F78;--ch-t-focusBorder: #1f6feb;--ch-t-tab-activeBackground: #0d1117;--ch-t-tab-activeForeground: #c9d1d9;--ch-t-tab-inactiveBackground: #010409;--ch-t-tab-inactiveForeground: #8b949e;--ch-t-tab-border: #30363d;--ch-t-tab-activeBorder: #0d1117;--ch-t-editorGroup-border: #30363d;--ch-t-editorGroupHeader-tabsBackground: #010409;--ch-t-editorLineNumber-foreground: #6e7681;--ch-t-input-background: #0d1117;--ch-t-input-foreground: #c9d1d9;--ch-t-input-border: #30363d;--ch-t-icon-foreground: #8b949e;--ch-t-sideBar-background: #010409;--ch-t-sideBar-foreground: #c9d1d9;--ch-t-sideBar-border: #30363d;--ch-t-list-activeSelectionBackground: #6e768166;--ch-t-list-activeSelectionForeground: #c9d1d9;--ch-t-list-hoverBackground: #6e76811a;--ch-t-list-hoverForeground: #c9d1d9; }'}}),"\n","\n",(0,o.jsx)(n.p,{children:"This flow demonstrates how to parse LLM responses into a structured format."}),"\n",(0,o.jsxs)(n.p,{children:["In this example, the ",(0,o.jsx)(n.a,{href:"/components-io#chat-input",children:"Chat Input"})," component is pre-loaded with a sample financial report to demonstrate extracting ",(0,o.jsx)(n.code,{children:"Gross Profit"}),", ",(0,o.jsx)(n.code,{children:"EBITDA"}),", and ",(0,o.jsx)(n.code,{children:"Net Income"}),".\nThe ",(0,o.jsx)(n.a,{href:"/components-processing#structured-output",children:"Structured output"})," component is used to extract the financial data from the report, and the ",(0,o.jsx)(n.a,{href:"/components-processing#parser",children:"Parser"})," component is used to convert the extracted data into a structured format."]}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/get-started-installation",children:"A running Langflow instance"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://platform.openai.com/",children:"An OpenAI API key"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"create-the-financial-report-parser-flow",children:"Create the financial report parser flow"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["From the Langflow dashboard, click ",(0,o.jsx)(n.strong,{children:"New Flow"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Select ",(0,o.jsx)(n.strong,{children:"Financial Report Parser"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"Financial Report Parser"})," flow is created."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Financial report parser flow",src:t(56308).A+"",width:"4000",height:"2038"})}),"\n",(0,o.jsx)(n.h2,{id:"run-the-financial-report-parser-flow",children:"Run the financial report parser flow"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Add your ",(0,o.jsx)(n.strong,{children:"OpenAI API key"})," to the ",(0,o.jsx)(n.strong,{children:"Language model"})," model component.\nOptionally, create a ",(0,o.jsx)(n.a,{href:"/configuration-global-variables",children:"global variable"})," for the\xa0",(0,o.jsx)(n.strong,{children:"OpenAI API key"}),"."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["In the\xa0",(0,o.jsx)(n.strong,{children:"OpenAI API Key"}),"\xa0field, click ",(0,o.jsx)(a.A,{name:"Globe","aria-hidden":"True"})," ",(0,o.jsx)(n.strong,{children:"Globe"}),", and then click\xa0",(0,o.jsx)(n.strong,{children:"Add New Variable"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["In the\xa0",(0,o.jsx)(n.strong,{children:"Variable Name"}),"\xa0field, enter\xa0",(0,o.jsx)(n.code,{children:"openai_api_key"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["In the\xa0",(0,o.jsx)(n.strong,{children:"Value"}),"\xa0field, paste your OpenAI API Key (",(0,o.jsx)(n.code,{children:"sk-..."}),")."]}),"\n",(0,o.jsxs)(n.li,{children:["Click\xa0",(0,o.jsx)(n.strong,{children:"Save Variable"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To run the flow, click\xa0",(0,o.jsx)(a.A,{name:"Play","aria-hidden":"true"})," ",(0,o.jsx)(n.strong,{children:"Playground"}),", and then click ",(0,o.jsx)(n.strong,{children:"Send"}),".\nThe ",(0,o.jsx)(n.strong,{children:"Chat Input"})," component is pre-loaded with a sample financial report for demonstration purposes.\nThe ",(0,o.jsx)(n.strong,{children:"Playground"})," returns a structured response:"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(h.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"EBITDA: $900 million , Net Income: $500 million , GROSS_PROFIT: $1.2 billion",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsx)(n.p,{children:"Inspect the flow to understand how this information was extracted."}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:["To inspect the output schema table, in the ",(0,o.jsx)(n.strong,{children:"Structured Output"})," component, click ",(0,o.jsx)(n.strong,{children:"Open table"}),".\nThe ",(0,o.jsx)(n.strong,{children:"Structured Output"})," component uses the attached ",(0,o.jsx)(n.strong,{children:"OpenAI"}),' model component as its "brain" to extract financial data into a ',(0,o.jsx)(n.a,{href:"/data-types#dataframe",children:"DataFrame"})," with this defined schema."]}),"\n"]}),"\n",(0,o.jsx)(h.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"| Name         | Description           | Type | Multiple |",props:{}}]},{tokens:[{content:"|--------------|-----------------------|------|----------|",props:{}}]},{tokens:[{content:"| EBITDA       | description of field  | text | False    |",props:{}}]},{tokens:[{content:"| NET_INCOME   | description of field  | text | False    |",props:{}}]},{tokens:[{content:"| GROSS_PROFIT | description of field  | text | False    |",props:{}}]}],lang:"text"},annotations:[]}]}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsxs)(n.li,{children:["To inspect the template that contains the extracted data, in the ",(0,o.jsx)(n.strong,{children:"Parser"})," component, click ",(0,o.jsx)(a.A,{name:"Scan","aria-hidden":"true"})," ",(0,o.jsx)(n.strong,{children:"Scan"})," in the ",(0,o.jsx)(n.strong,{children:"Template"})," field.\nThe ",(0,o.jsx)(n.strong,{children:"Parser"})," component converts the extracted data into formatted messages for chat consumption.\nEach variable receives its value from the structured outputs."]}),"\n"]}),"\n",(0,o.jsx)(h.Code,{codeConfig:p,northPanel:{tabs:[""],active:"",heightRatio:1},files:[{name:"",focus:"",code:{lines:[{tokens:[{content:"EBITDA: {EBITDA}  ,  Net Income: {NET_INCOME} , GROSS_PROFIT: {GROSS_PROFIT}",props:{}}]}],lang:"text"},annotations:[]}]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}function x(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},56308:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/starter-flow-financial-report-parser-5e11513e6ca4d6e4c0429e176e97fe90.png"}}]);