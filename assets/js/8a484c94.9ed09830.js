"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[8750],{19680:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/starter-flow-simple-agent-cd0ff46423ac65a913c22a0360d1570b.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},81451:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Components/components-agents","title":"Agents","description":"Agent components define the behavior and capabilities of AI agents in your flow.","source":"@site/docs/Components/components-agents.mdx","sourceDirName":"Components","slug":"/components-agents","permalink":"/components-agents","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Agents","slug":"/components-agents"},"sidebar":"docs","previous":{"title":"Components overview","permalink":"/concepts-components"},"next":{"title":"Bundles","permalink":"/components-bundle-components"}}');var r=t(74848),o=t(28453);const i={title:"Agents",slug:"/components-agents"},c="Agent components in Langflow",d={},l=[{value:"Use an agent in a flow",id:"use-an-agent-in-a-flow",level:2},{value:"Agent component",id:"agent-component",level:2},{value:"MCP tools",id:"mcp-connection",level:2},{value:"Legacy components",id:"legacy-components",level:2},{value:"JSON Agent",id:"json-agent",level:3},{value:"Vector Store Agent",id:"vector-store-agent",level:3},{value:"Vector Store Router Agent",id:"vector-store-router-agent",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"agent-components-in-langflow",children:"Agent components in Langflow"})}),"\n",(0,r.jsx)(n.p,{children:"Agent components define the behavior and capabilities of AI agents in your flow."}),"\n",(0,r.jsx)(n.p,{children:"Agents use LLMs as a reasoning engine to decide which of the connected tool components to use to solve a problem."}),"\n",(0,r.jsxs)(n.p,{children:["Tools in agentic functions are essentially functions that the agent can call to perform tasks or access external resources.\nA function is wrapped as a ",(0,r.jsx)(n.code,{children:"Tool"})," object with a common interface the agent understands.\nAgents become aware of tools through tool registration where the agent is provided a list of available tools typically at agent initialization. The ",(0,r.jsx)(n.code,{children:"Tool"})," object's description tells the agent what the tool can do."]}),"\n",(0,r.jsx)(n.p,{children:"The agent then uses a connected LLM to reason through the problem to decide which tool is best for the job."}),"\n",(0,r.jsx)(n.h2,{id:"use-an-agent-in-a-flow",children:"Use an agent in a flow"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"/simple-agent",children:"simple agent starter project"})," uses an ",(0,r.jsx)(n.a,{href:"#agent-component",children:"agent component"})," connected to URL and Calculator tools to answer a user's questions. The OpenAI LLM acts as a brain for the agent to decide which tool to use. Tools are connected to agent components at the ",(0,r.jsx)(n.strong,{children:"Tools"})," port."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Simple agent starter flow",src:t(19680).A+"",width:"4000",height:"1826"})}),"\n",(0,r.jsxs)(n.p,{children:["For a multi-agent example see ",(0,r.jsx)(n.a,{href:"/agents",children:"Create a flow with an agent"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"agent-component",children:"Agent component"}),"\n",(0,r.jsx)(n.p,{children:"This component creates an agent that can use tools to answer questions and perform tasks based on given instructions."}),"\n",(0,r.jsxs)(n.p,{children:["The component includes an LLM model integration, a system message prompt, and a ",(0,r.jsx)(n.strong,{children:"Tools"})," port to connect tools to extend its capabilities."]}),"\n",(0,r.jsxs)(n.p,{children:["For more information on this component, see the ",(0,r.jsx)(n.a,{href:"/agents",children:"Agent documentation"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"agent_llm"}),(0,r.jsx)(n.td,{children:"Dropdown"}),(0,r.jsx)(n.td,{children:"The provider of the language model that the agent uses to generate responses. Options include OpenAI and other providers or Custom."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"system_prompt"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"The system prompt provides initial instructions and context to guide the agent's behavior."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"tools"}),(0,r.jsx)(n.td,{children:"List"}),(0,r.jsx)(n.td,{children:"The list of tools available for the agent to use. This field is optional and can be empty."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"input_value"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:"The input task or question for the agent to process."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"add_current_date_tool"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"When true this adds a tool to the agent that returns the current date."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"memory"}),(0,r.jsx)(n.td,{children:"Memory"}),(0,r.jsx)(n.td,{children:"An optional memory configuration for maintaining conversation history."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"max_iterations"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"The maximum number of iterations the agent can perform."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"handle_parsing_errors"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"This determines whether to handle parsing errors during agent execution."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"verbose"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"This enables verbose output for detailed logging."})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"response"}),(0,r.jsx)(n.td,{children:"Message"}),(0,r.jsx)(n.td,{children:"The agent's response to the given input task."})]})})]})]}),"\n",(0,r.jsx)(n.h2,{id:"mcp-connection",children:"MCP tools"}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsxs)(n.p,{children:["Prior to Langflow 1.5, this component was named ",(0,r.jsx)(n.strong,{children:"MCP connection"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"MCP tools"})," component connects to a ",(0,r.jsx)(n.a,{href:"https://modelcontextprotocol.io/introduction",children:"Model Context Protocol (MCP)"})," server and exposes the MCP server's tools as tools for Langflow agents."]}),"\n",(0,r.jsxs)(n.p,{children:["In addition to being an MCP client that can leverage MCP servers, the ",(0,r.jsx)(n.strong,{children:"MCP tools"})," component's ",(0,r.jsx)(n.a,{href:"/mcp-client#mcp-sse-mode",children:"SSE mode"})," allows you to connect your flow to the Langflow MCP server at the ",(0,r.jsx)(n.code,{children:"/api/v1/mcp/sse"})," API endpoint, exposing all flows within your ",(0,r.jsx)(n.a,{href:"/concepts-flows#projects",children:"project"})," as tools within a flow."]}),"\n",(0,r.jsxs)(n.p,{children:["For more information, see ",(0,r.jsx)(n.a,{href:"/mcp-client",children:"MCP client"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"legacy-components",children:"Legacy components"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Legacy"})," components are available for use but are no longer supported."]}),"\n",(0,r.jsx)(n.h3,{id:"json-agent",children:"JSON Agent"}),"\n",(0,r.jsx)(n.p,{children:"This component creates a JSON agent from a JSON or YAML file and an LLM."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"llm"}),(0,r.jsx)(n.td,{children:"LanguageModel"}),(0,r.jsx)(n.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"path"}),(0,r.jsx)(n.td,{children:"File"}),(0,r.jsx)(n.td,{children:"The path to the JSON or YAML file."})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"agent"}),(0,r.jsx)(n.td,{children:"AgentExecutor"}),(0,r.jsx)(n.td,{children:"The JSON agent instance."})]})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"vector-store-agent",children:"Vector Store Agent"}),"\n",(0,r.jsx)(n.p,{children:"This component creates a Vector Store Agent using LangChain."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"llm"}),(0,r.jsx)(n.td,{children:"LanguageModel"}),(0,r.jsx)(n.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"vectorstore"}),(0,r.jsx)(n.td,{children:"VectorStoreInfo"}),(0,r.jsx)(n.td,{children:"The vector store information for the agent to use."})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"agent"}),(0,r.jsx)(n.td,{children:"AgentExecutor"}),(0,r.jsx)(n.td,{children:"The Vector Store Agent instance."})]})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"vector-store-router-agent",children:"Vector Store Router Agent"}),"\n",(0,r.jsx)(n.p,{children:"This component creates a Vector Store Router Agent using LangChain."}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Parameters"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"llm"}),(0,r.jsx)(n.td,{children:"LanguageModel"}),(0,r.jsx)(n.td,{children:"The language model to use for the agent."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"vectorstores"}),(0,r.jsx)(n.td,{children:"List[VectorStoreInfo]"}),(0,r.jsx)(n.td,{children:"The list of vector store information for the agent to route between."})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Outputs"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"agent"}),(0,r.jsx)(n.td,{children:"AgentExecutor"}),(0,r.jsx)(n.td,{children:"The Vector Store Router Agent instance."})]})})]})]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);